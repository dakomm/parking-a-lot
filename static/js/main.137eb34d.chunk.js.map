{"version":3,"sources":["components/ClippedAppBar.js","components/TopAppBar.js","components/Calendar_Ant.js","components/events.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","root","display","appBar","zIndex","drawer","backgroundColor","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","useStyles","AppBar","menuButton","color","marginRight","title","fontWeight","logInButton","borderColor","marginLeft","TopAppBar","classes","useState","user","setUser","userName","setUserName","setUserID","logIO","setLogIO","isModalVisible","setIsModalVisible","modalLogInButton","e","className","position","Toolbar","IconButton","edge","aria-label","Typography","variant","Button","onClick","visible","onCancel","closable","footer","type","direction","placeholder","onChange","target","value","prefix","UserOutlined","allowClear","Password","onPressEnter","CalendarAnt","moment","date","setDate","dialogOpen","setDialogOpen","dateClicked","setDateClicked","dialogMsg","setDialogMsg","selectedID","setSelectedID","id","giver","getter","listData","setListData","useEffect","console","log","handleMatch","dateFilteredList","filter","buttonType","listDataElement","onHoverMsg","Grid","container","alignItems","shape","overlayStyle","size","style","margin","danger","disabled","fullscreen","headerRender","monthOptions","onTypeChange","current","clone","localeData","months","i","month","push","monthsShort","index","Option","year","options","gutter","dropdownMatchSelectWidth","newYear","now","String","selectedMonth","newValue","parseInt","ghost","onSelect","setTimeout","onDateSelect","dateCellRender","length","format","listStyle","paddingLeft","map","item","justify","handleGet","handleGive","Dialog","open","onClose","aria-describedby","aria-labelledby","DialogTitle","DialogActions","autoFocus","Date","locale","momentLocalizer","withStyles","marginTop","BigCalendar","events","badge","fontSize","whiteSpace","textOverflow","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.137eb34d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, fade, rgbToHex } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HandIcon from '@material-ui/icons/PanTool';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport HeartIcon from '@material-ui/icons/Favorite';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingIcon from '@material-ui/icons/Settings';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n   // backgroundColor: fade(indigo,0.25),\r\n    backgroundColor: 'green',\r\n    \r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ClippedDrawer(props) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" noWrap>\r\n            PARKING a LOT\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {['빌립니다', '빌려드립니다'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                {/* // <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>  */}\r\n                <ListItemIcon>\r\n                  {/* // {index === 0 ? <HandIcon /> : \r\n                  // (index === 1 ? <HeartIcon/> : null)}  */}\r\n                  {index === 0 && <HandIcon />}\r\n                  {index === 1 && <HeartIcon/>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['History', 'Setting'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index === 0 && <HistoryIcon/>}\r\n                  {index === 1 && <SettingIcon/>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React,{ useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Modal, Input, Alert, Divider, Space, Select, Col, Row, message} from 'antd';\r\nimport { UserOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  AppBar: {\r\n    backgroundColor : \"green\",\r\n  },\r\n  menuButton: {\r\n    color: '#ffb10a',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: '#ffb10a',\r\n    fontWeight: 'bold',\r\n  },\r\n  logInButton: {\r\n    color: '#ffb10a',\r\n    borderColor: '#ffb10a',\r\n    marginLeft: theme.spacing(1),\r\n    padding : theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TopAppBar = () => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n  const [userID, setUserID] = useState('');\r\n  const [logIO, setLogIO] = useState('log in');\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const logInButton = () => {\r\n    if(logIO === 'log in') setIsModalVisible(true);\r\n    else {\r\n      setLogIO('log in');\r\n      setUser(''); \r\n      setUserName('');\r\n      setUserID('');\r\n    }\r\n  }\r\n  const modalLogInButton = (e) => {\r\n    // if(){  //TODO: userID, name verify!\r\n    // }\r\n    setUser(userName);\r\n    setIsModalVisible(false);\r\n    setLogIO('log out');\r\n  }\r\n\r\n  const onNameChange = (e) => {\r\n    setUserName(e.target.value)\r\n  }\r\n  const onIDChange = (e) => {\r\n    setUserID(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Toolbar >\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          PARKING a LOT\r\n          </Typography>\r\n          <Button color=\"inherit\">{user}</Button>\r\n          <Button variant=\"outlined\" className={classes.logInButton} onClick={()=>{logInButton()}}>{logIO}</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Modal \r\n        visible={isModalVisible & (logIO === 'log in')} \r\n        onCancel={() => {setIsModalVisible(false);}}\r\n        width={'250px'}\r\n        closable\r\n        footer={[\r\n          <Button type=\"primary\" onClick={()=>{modalLogInButton()}}>\r\n            Log In\r\n          </Button>\r\n          ]}\r\n      >\r\n        <Space direction=\"vertical\"><br/>\r\n          <Input placeholder=\"이름\" onChange={onNameChange}prefix={<UserOutlined/>} allowClear/>\r\n          <Input.Password placeholder=\"사번\" onChange={onIDChange} onPressEnter={()=>{modalLogInButton()}} prefix={<UserOutlined/>} allowClear/>\r\n        </Space>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (TopAppBar);","import React, { Component, useEffect, useState } from \"react\";\r\nimport { makeStyles, fade, rgbToHex } from '@material-ui/core/styles';\r\nimport { Grid, GridList, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText} from '@material-ui/core';\r\nimport { Calendar, Modal, Alert, List, Divider, Space, Select, Radio, Col, Row, Typography, Button, Badge, Popover, message} from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko';\r\nimport './Calendar_Ant.css'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst CalendarAnt = () => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState('KDK'); //로그인 user state\r\n  const [date, setDate] = useState(moment());\r\n  const [isModalVisible, setIsModalVisible] = useState(false); //더블 클릭 시 Modal 띄우기, 닫기\r\n  const [dialogOpen, setDialogOpen] = useState(false); // 받기/주기 popover 클릭 시 confirm 창 띄우기\r\n  const [dateClicked, setDateClicked] = useState(false); //더블 클릭 시 Modal 띄우기 위해\r\n  const [dialogMsg, setDialogMsg] = useState(''); // 받기/주기 popover 클릭 시 confirm용 메시지\r\n  const [selectedID, setSelectedID] = useState(); // 받기/주기 popover 클릭 시 해당 ID state\r\n  const [listData, setListData] = useState([\r\n    {id:0, date: '2021-07-21', giver: 'DK', getter: ''},\r\n    {id:1, date: '2021-07-01', giver: 'AA', getter: 'BBB'},\r\n    {id:2, date: '2021-07-05', giver: 'CC', getter: ''},\r\n    {id:3, date: '2021-07-05', giver: 'DD', getter: ''},\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(listData);\r\n  },[listData]);\r\n\r\n  function onDateSelect  (value){   //onSelect\r\n    setDate(value);  // 2017-01-25처럼 표시 : selectedValue && selectedValue.format('YYYY-MM-DD')        \r\n    if(dateClicked){\r\n      setIsModalVisible(true);\r\n      setDateClicked(false);\r\n    } \r\n    setDateClicked(true);\r\n    setTimeout(() => setDateClicked(false), 200);\r\n  }\r\n\r\n  const handleGet = (date) => {\r\n    setIsModalVisible(false);   //빌려주세요 버튼 클릭 시 모달 닫기\r\n    setListData([...listData, {id:listData.length, date:date, giver:'',getter:user}]);\r\n  };\r\n  const handleGive = (date) => {\r\n    setIsModalVisible(false);\r\n    setListData([...listData, {id:listData.length, date:date, giver:user, getter:''}]);\r\n  };\r\n\r\n  const handleMatch = (id)=> {\r\n      if(listData[id].getter === ''){\r\n        setDialogMsg(listData[id].giver + \"님의 주차권을 빌리실래요?\");\r\n        setSelectedID(id);\r\n        // setListData(listData.map(item=> item.id === id ? ({...item, getter : user}): item))\r\n      }\r\n      else if(listData[id].giver === ''){\r\n        setDialogMsg(listData[id].getter + \"님에게 주차권을 빌려주실래요?\");\r\n        setSelectedID(id);\r\n      }\r\n  };\r\n\r\n  const dateFilteredList = (date) => {\r\n    return listData.filter((e => e.date === date));\r\n  }\r\n\r\n  const buttonType = (listDataElement) => {\r\n    if(listDataElement.getter === ''){\r\n      let onHoverMsg = \"From : \" + listDataElement.giver;\r\n      let GiveOrGet = '받기';\r\n      return(\r\n        <Popover \r\n          title={onHoverMsg}  \r\n          content={<Grid container direction=\"column\" alignItems=\"center\">\r\n            <Button shape=\"round\" onClick={()=>{setDialogOpen(true);handleMatch(listDataElement.id);}}>{GiveOrGet}</Button>\r\n          </Grid>}\r\n          overlayStyle={{width: \"120px\"}}\r\n        >\r\n          <Button type=\"primary\" shape=\"round\" size=\"small\" style={{margin:3}}>{listDataElement.giver}</Button>\r\n        </Popover>\r\n      )\r\n    } else if(listDataElement.giver === ''){\r\n      let onHoverMsg = \"To : \" + listDataElement.getter;\r\n      let GiveOrGet = '주기';\r\n      return(\r\n        <Popover \r\n          title={onHoverMsg}  \r\n          content={<Grid container direction=\"column\" alignItems=\"center\">\r\n            <Button shape=\"round\" onClick={()=>{setDialogOpen(true);handleMatch(listDataElement.id);}}>{GiveOrGet}</Button>\r\n          </Grid>}\r\n          overlayStyle={{width: \"120px\"}}\r\n        >\r\n          <Button type=\"primary\" shape=\"round\" size=\"small\" danger style={{margin:3}}>{listDataElement.getter}</Button>\r\n        </Popover>\r\n      )\r\n    } else{return(\r\n      <Button type=\"dashed\" shape=\"round\" size=\"small\" disabled style={{margin:3}}>{listDataElement.giver}→{listDataElement.getter}</Button>\r\n    )}\r\n  }\r\n\r\n  function dateCellRender(value) {\r\n\r\n    for(let i=0; i<listData.length; i++){\r\n      if( listData[i].date === value.format('YYYY-MM-DD')){\r\n        return(\r\n        <ul style={{listStyle:\"none\", paddingLeft:\"0px\"}}>\r\n          {dateFilteredList(listData[i].date).map(item =>(<li key={item.id}>{buttonType(item)}</li>))}\r\n        </ul>\r\n        )\r\n      } \r\n    }\r\n    return;\r\n  };\r\n\r\n  const getListData = (value) => {\r\n    let listData;\r\n    listData = [\r\n      {id:'0', date: '2021-07-21', giver: 'DK', getter: ''},\r\n      {id:'1', date: '2021-07-01', giver: 'AA', getter: 'BBB'},\r\n    ];\r\n    return (listData || []);\r\n    }\r\n\r\n  return(\r\n    <div className=\"site-calendar-customize-header-wrapper\">\r\n    <Calendar\r\n      fullscreen={true}\r\n      headerRender={({ value, type, onChange, onTypeChange }) => {\r\n        const start = 0;\r\n        const end = 11;\r\n        const monthOptions = [];\r\n        const current = value.clone();\r\n        const localeData = value.localeData();\r\n        const months = [];\r\n        for (let i = 0; i < 12; i++) {\r\n          current.month(i);\r\n          months.push(localeData.monthsShort(current));\r\n        }\r\n\r\n        for (let index = start; index < end; index++) {\r\n          monthOptions.push(\r\n            <Select.Option className=\"month-item\" key={`${index}`}>\r\n              {months[index]}\r\n            </Select.Option>,\r\n          );\r\n        }\r\n        const month = value.month();\r\n        const year = value.year();\r\n        const options = [];\r\n        for (let i = year - 10; i < year + 10; i += 1) {\r\n          options.push(\r\n            <Select.Option key={i} value={i} className=\"year-item\">\r\n              {i}\r\n            </Select.Option>,\r\n          );\r\n        }\r\n        \r\n        return (\r\n          <div style={{ padding: 8 }}>\r\n            <Row gutter={8}>    {/* Year, Month Row의 Padding값(px) */}\r\n              <Col>\r\n                <Select\r\n                  size=\"small\"\r\n                  dropdownMatchSelectWidth={false}\r\n                  className=\"my-year-select\"\r\n                  onChange={newYear => {\r\n                    const now = value.clone().year(newYear);\r\n                    onChange(now);\r\n                  }}\r\n                  value={String(year)}\r\n                >\r\n                  {options}\r\n                </Select>\r\n              </Col>\r\n              <Col>\r\n                <Select\r\n                  size=\"small\"\r\n                  dropdownMatchSelectWidth={false}\r\n                  value={String(month)}\r\n                  onChange={selectedMonth => {\r\n                    const newValue = value.clone();\r\n                    newValue.month(parseInt(selectedMonth, 10));\r\n                    onChange(newValue);\r\n                  }}\r\n                >\r\n                  {monthOptions}\r\n                </Select>\r\n              </Col>\r\n              <Col>\r\n                <Button ghost\r\n                    type=\"primary\" \r\n                    size=\"small\"\r\n                    onClick={()=>{setDate(moment());}} // selectable calendar 참고\r\n                >\r\n                    Today\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        );\r\n      }}\r\n      value={moment(date)} \r\n      onSelect={(value)=>{onDateSelect(value); console.log('onSelect 됨')}}\r\n      dateCellRender={dateCellRender}\r\n      zIndex={0}\r\n    />\r\n\r\n    <Modal \r\n      title={date.format('YYYY-MM-DD')}\r\n      visible={isModalVisible} \r\n      onCancel={() => {setIsModalVisible(false);}}\r\n      width={'250px'}\r\n      closable\r\n      footer={[\r\n        <Grid container justify=\"space-around\">\r\n        <Button key=\"get\" type=\"primary\" danger onClick={()=>{handleGet(date.format('YYYY-MM-DD'))}}>\r\n          빌려주세요\r\n        </Button>\r\n        <Button key=\"give\" type=\"primary\" onClick={()=>{handleGive(date.format('YYYY-MM-DD'))}}>\r\n          빌려주기\r\n        </Button>\r\n        </Grid>\r\n        ]}\r\n    >\r\n      {listData.map(e=>{\r\n        if( e.date === date.format('YYYY-MM-DD') ){\r\n          if(e.getter === ''){\r\n            let onHoverMsg = \"From : \" + e.giver;\r\n            return<Popover \r\n                    title={onHoverMsg}  \r\n                    content={<Grid container direction=\"column\" alignItems=\"center\">\r\n                      <Button shape=\"round\" onClick={()=>{setDialogOpen(true);handleMatch(e.id);}}>받기</Button>\r\n                    </Grid>}\r\n                    overlayStyle={{width: \"120px\"}}\r\n                  >\r\n                    <Button type=\"primary\" shape=\"round\" size=\"small\" style={{margin:3}}>{e.giver}</Button>\r\n                  </Popover>\r\n          }\r\n          else if(e.giver === ''){\r\n            let onHoverMsg = \"To : \" + e.getter;\r\n            return<Popover \r\n                    // style={{pointerEvents: \"none\", cursor: \"none\"}}\r\n                    title={onHoverMsg}  \r\n                    content={<Grid container direction=\"column\" alignItems=\"center\">\r\n                      <Button shape=\"round\" onClick={()=>{setDialogOpen(true); handleMatch(e.id);}}>주기</Button>\r\n                    </Grid>}\r\n                    overlayStyle={{width: \"120px\"}}\r\n                  >\r\n                    <Button type=\"primary\" shape=\"round\" size=\"small\" danger style={{margin:3}}>{e.getter}</Button> \r\n                  </Popover>\r\n          }\r\n          else{ return <Button type=\"dashed\" shape=\"round\" size=\"small\" disabled>\r\n                      {e.giver}→{e.getter}</Button>};\r\n          // if 화면 size small -> return (<Badge status={'success'}/>) ;\r\n          // setBadgeType('success');    // 초기화하는 로직 추가 필요\r\n          // cardLeft = true;\r\n        }\r\n      })}\r\n    </Modal>\r\n\r\n    <Dialog open={dialogOpen} onClose={()=>{setDialogOpen(false)}} aria-describedby=\"alert-dialog-description\" aria-labelledby=\"alert-dialog-title\">\r\n      <DialogTitle id=\"alert-dialog-title\">{dialogMsg}</DialogTitle>\r\n      <DialogActions>\r\n        <Button color=\"primary\" autoFocus\r\n          onClick={()=>{\r\n            setDialogOpen(false); \r\n            if(listData[selectedID].getter === ''){\r\n              setListData(listData.map(item=> item.id === selectedID ? ({...item, getter : user}): item))\r\n            }\r\n            else if(listData[selectedID].giver === ''){\r\n              setListData(listData.map(item=> item.id === selectedID ? ({...item, giver : user}): item))\r\n            }\r\n          }}\r\n        > 네! </Button>\r\n        <Button onClick={()=>{setDialogOpen(false)}}>됐어요</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (CalendarAnt);\r\n","export default [\r\n    {\r\n      'title': 'All Day Event very long title',\r\n      'allDay': true,\r\n      'start': new Date(2015, 3, 0),\r\n      'end': new Date(2015, 3, 1)\r\n    },\r\n    {\r\n      'title': 'Long Event',\r\n      'start': new Date(2015, 3, 7),\r\n      'end': new Date(2015, 3, 10)\r\n    },\r\n  \r\n    {\r\n      'title': 'DTS STARTS',\r\n      'start': new Date(2016, 2, 13, 0, 0, 0),\r\n      'end': new Date(2016, 2, 20, 0, 0, 0)\r\n    },\r\n  \r\n    {\r\n      'title': 'DTS ENDS',\r\n      'start': new Date(2016, 10, 6, 0, 0, 0),\r\n      'end': new Date(2016, 10, 13, 0, 0, 0)\r\n    },\r\n  \r\n    {\r\n      'title': 'Some Event',\r\n      'start': new Date(2015, 3, 9, 0, 0, 0),\r\n      'end': new Date(2015, 3, 9, 0, 0, 0)\r\n    },\r\n    {\r\n      'title': 'Conference',\r\n      'start': new Date(2015, 3, 11),\r\n      'end': new Date(2015, 3, 13),\r\n      desc: 'Big conference for important people'\r\n    },\r\n    {\r\n      'title': 'Meeting',\r\n      'start': new Date(2015, 3, 12, 10, 30, 0, 0),\r\n      'end': new Date(2015, 3, 12, 12, 30, 0, 0),\r\n      desc: 'Pre-meeting meeting, to prepare for the meeting'\r\n    },\r\n    {\r\n      'title': 'Lunch',\r\n      'start': new Date(2015, 3, 12, 12, 0, 0, 0),\r\n      'end': new Date(2015, 3, 12, 13, 0, 0, 0),\r\n      desc: 'Power lunch'\r\n    },\r\n    {\r\n      'title': 'Meeting',\r\n      'start': new Date(2015, 3, 12, 14, 0, 0, 0),\r\n      'end': new Date(2015, 3, 12, 15, 0, 0, 0)\r\n    },\r\n    {\r\n      'title': 'Happy Hour',\r\n      'start': new Date(2015, 3, 12, 17, 0, 0, 0),\r\n      'end': new Date(2015, 3, 12, 17, 30, 0, 0),\r\n      desc: 'Most important meal of the day'\r\n    },\r\n    {\r\n      'title': 'Dinner',\r\n      'start': new Date(2015, 3, 12, 20, 0, 0, 0),\r\n      'end': new Date(2015, 3, 12, 21, 0, 0, 0)\r\n    },\r\n    {\r\n      'title': 'Birthday Party',\r\n      'start': new Date(2015, 3, 13, 7, 0, 0),\r\n      'end': new Date(2015, 3, 13, 10, 30, 0)\r\n    },\r\n    {\r\n      'title': 'Birthday Party 2',\r\n      'start': new Date(2015, 3, 13, 7, 0, 0),\r\n      'end': new Date(2015, 3, 13, 10, 30, 0)\r\n    },\r\n    {\r\n      'title': 'Birthday Party 3',\r\n      'start': new Date(2015, 3, 13, 7, 0, 0),\r\n      'end': new Date(2015, 3, 13, 10, 30, 0)\r\n    },\r\n    {\r\n      'title': 'Late Night Event',\r\n      'start': new Date(2015, 3, 17, 19, 30, 0),\r\n      'end': new Date(2015, 3, 18, 2, 0, 0)\r\n    },\r\n    {\r\n      'title': 'Multi-day Event',\r\n      'start': new Date(2015, 3, 20, 19, 30, 0),\r\n      'end': new Date(2015, 3, 22, 2, 0, 0)\r\n    }\r\n  ]\r\n  ","import React, { Component, useEffect, useState } from \"react\";\r\n\r\nimport CalendarAnt from \"./Calendar_Ant\";\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button, InputAdornment , Grid, TextField, Fab,\r\n    Dialog, DialogActions, DialogContent, DialogTitle,\r\n  } from \"@material-ui/core\";\r\nimport MaterialUIPickers from \"./DatePicker\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport BigCalendar from 'react-big-calendar';\r\nimport moment from 'moment'\r\nimport events from './events';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\n\r\n// import 'antd/dist/antd.css';\r\n// import { Calendar, Badge } from 'antd';\r\n\r\n//import DatePicker, { registerLocale } from \"react-datepicker\";\r\n// registerLocale(\"ko\", ko);\r\n// import getYear from \"date-fns/getYear\";\r\n// import getMonth from \"date-fns/getMonth\";\r\n\r\nmoment.locale('ko');\r\nconst localizer = momentLocalizer(moment)\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        position: \"relative\",\r\n      width: \"100%\",\r\n      marginTop: \"20px\",\r\n      marginLeft:\"240px\",\r\n    },\r\n    BigCalendar:{\r\n\r\n    },\r\n    events: {\r\n          margin: 0,\r\n          padding: 0,\r\n          listStyle: 'none',\r\n    },\r\n    badge: {\r\n          width: '100%',\r\n          overflow: 'hidden',\r\n          fontSize: '12px',\r\n          whiteSpace: 'nowrap',\r\n          textOverflow: 'ellipsis',\r\n    }\r\n\r\n});\r\n\r\nconst Main = (props) => {\r\n    const {classes} = props;\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return(\r\n      <main>\r\n        \r\n\r\n        {/* <Calendar\r\n        className=\"BigCalendar\"\r\n        localizer={localizer}\r\n        events= {events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        /> */}\r\n\r\n        <CalendarAnt/>\r\n\r\n{/* \r\n        <Calendar dateCellRender={dateCellRender} />,\r\n        document.getElementById('container'), */}\r\n\r\n{/* https://fullcalendar.io/docs/month-view */}\r\n\r\n        {/* TODO : <DatePicker/> */}\r\n        {/* TODO : 하루만 체크박스 */}\r\n        {/* TODO : 확정/취소/에러 시 alert 추가 */}\r\n      </main>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Main);\r\n\r\n// function getListData(value) {\r\n//     let listData;\r\n//     switch (value.date()) {\r\n//         case 8:\r\n//         listData = [\r\n            \r\n//             { type: 'success', content: 'This is usual event.' },\r\n//         ];\r\n//         break;\r\n//         case 10:\r\n//         listData = [\r\n            \r\n//             { type: 'success', content: 'This is usual event.' },\r\n//             { type: 'error', content: 'This is error event.' },\r\n//         ];\r\n//         break;\r\n//         case 15:\r\n//         listData = [\r\n//             { type: 'warning', content: 'This is warning event' },\r\n            \r\n//         ];\r\n//         break;\r\n//         default:\r\n//     }\r\n//     return listData || [];\r\n//     }\r\n\r\n//     function dateCellRender(value) {\r\n//     const listData = getListData(value);\r\n//     return (\r\n//         <ul className=\"events\">\r\n//         {listData.map(item => (\r\n//             <li key={item.content}>\r\n//             <Badge className=\"badge\" status={item.type} text={item.content} />\r\n//             </li>\r\n//         ))}\r\n//         </ul>\r\n//     );\r\n//     }","import React, { Component, useEffect, useState } from \"react\";\nimport ClippedAppBar from \"./components/ClippedAppBar\";\nimport TopAppBar from \"./components/TopAppBar\";\nimport Main from \"./components/main\";\n\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  root:{\n    width: \"100%\",\n  },\n  main:{\n\n  }\n});\n\nexport default function App() {\n  //const classes = props;\n  const classes = styles();\n\n  return (\n    <div className=\"App\">\n      <TopAppBar/>\n      <Main className=\"main\"/>\n      \n    </div>\n  );\n}\n\n//export default withStyles(styles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}